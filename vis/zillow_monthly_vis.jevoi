{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "953c182e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import random\n",
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.stats import chi2_contingency\n",
    "#import pingouin\n",
    "from datetime import datetime\n",
    "from matplotlib.pyplot import figure\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "43a17814",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>zip_code</th>\n",
       "      <th>state</th>\n",
       "      <th>city</th>\n",
       "      <th>borough</th>\n",
       "      <th>date</th>\n",
       "      <th>home_value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11368</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>249885.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11385</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>333404.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11236</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>255687.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11208</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>235676.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10467</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BRONX</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>174696.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43058</th>\n",
       "      <td>10464</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BRONX</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>609781.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43059</th>\n",
       "      <td>10004</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>1081807.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43060</th>\n",
       "      <td>10006</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>902566.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43061</th>\n",
       "      <td>11243</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>1426544.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43062</th>\n",
       "      <td>10118</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>2867150.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>43063 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       zip_code state      city    borough       date  home_value\n",
       "0         11368    NY  New York     QUEENS 2002-01-31    249885.0\n",
       "1         11385    NY  New York     QUEENS 2002-01-31    333404.0\n",
       "2         11236    NY  New York   BROOKLYN 2002-01-31    255687.0\n",
       "3         11208    NY  New York   BROOKLYN 2002-01-31    235676.0\n",
       "4         10467    NY  New York      BRONX 2002-01-31    174696.0\n",
       "...         ...   ...       ...        ...        ...         ...\n",
       "43058     10464    NY  New York      BRONX 2022-10-31    609781.0\n",
       "43059     10004    NY  New York  MANHATTAN 2022-10-31   1081807.0\n",
       "43060     10006    NY  New York  MANHATTAN 2022-10-31    902566.0\n",
       "43061     11243    NY  New York   BROOKLYN 2022-10-31   1426544.0\n",
       "43062     10118    NY  New York  MANHATTAN 2022-10-31   2867150.0\n",
       "\n",
       "[43063 rows x 6 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "zhome_value = pd.read_csv(\"../data/clean/zhome_value.csv\")\n",
    "\n",
    "zhome_value[\"date\"] = pd.to_datetime(zhome_value[\"date\"])\n",
    "zhome_value[\"borough\"] = zhome_value[\"borough\"].apply(str)\n",
    "zhome_value[\"city\"] = zhome_value[\"city\"].apply(str)\n",
    "zhome_value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "71bfa8fd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>zip_code</th>\n",
       "      <th>state</th>\n",
       "      <th>city</th>\n",
       "      <th>borough</th>\n",
       "      <th>date</th>\n",
       "      <th>mean_rent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>11385</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>2216.568524</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>10467</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BRONX</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>1303.888993</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11226</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>1909.383681</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>11220</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>1686.421706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11207</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>2113.610448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8731</th>\n",
       "      <td>10282</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>7836.527778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8732</th>\n",
       "      <td>10069</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>5778.583333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8733</th>\n",
       "      <td>10004</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>4823.220238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8734</th>\n",
       "      <td>10006</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>4180.540793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8735</th>\n",
       "      <td>11109</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>4121.017857</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8736 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      zip_code state      city    borough       date    mean_rent\n",
       "0        11385    NY  New York     QUEENS 2015-03-31  2216.568524\n",
       "1        10467    NY  New York      BRONX 2015-03-31  1303.888993\n",
       "2        11226    NY  New York   BROOKLYN 2015-03-31  1909.383681\n",
       "3        11220    NY  New York   BROOKLYN 2015-03-31  1686.421706\n",
       "4        11207    NY  New York   BROOKLYN 2015-03-31  2113.610448\n",
       "...        ...   ...       ...        ...        ...          ...\n",
       "8731     10282    NY  New York  MANHATTAN 2022-10-31  7836.527778\n",
       "8732     10069    NY  New York  MANHATTAN 2022-10-31  5778.583333\n",
       "8733     10004    NY  New York  MANHATTAN 2022-10-31  4823.220238\n",
       "8734     10006    NY  New York  MANHATTAN 2022-10-31  4180.540793\n",
       "8735     11109    NY  New York     QUEENS 2022-10-31  4121.017857\n",
       "\n",
       "[8736 rows x 6 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "zrental = pd.read_csv(\"../data/clean/zrentals.csv\")\n",
    "\n",
    "zrental[\"date\"] = pd.to_datetime(zrental[\"date\"])\n",
    "zrental[\"borough\"] = zrental[\"borough\"].apply(str)\n",
    "zrental[\"city\"] = zrental[\"city\"].apply(str)\n",
    "zrental"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "90ddc51e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Address</th>\n",
       "      <th>County</th>\n",
       "      <th>Zip</th>\n",
       "      <th>price</th>\n",
       "      <th>Listing Url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2600 Netherland Ave Bronx, NY 10463</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>10463</td>\n",
       "      <td>2245</td>\n",
       "      <td>https://www.trulia.com/c/ny/bronx/the-century-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2600 Netherland Ave Bronx, NY 10463</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>10463</td>\n",
       "      <td>2600</td>\n",
       "      <td>https://www.trulia.com/c/ny/bronx/the-century-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2600 Netherland Ave Bronx, NY 10463</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>10463</td>\n",
       "      <td>3675</td>\n",
       "      <td>https://www.trulia.com/c/ny/bronx/the-century-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>939 Woodycrest Ave Bronx, NY 10452</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>10452</td>\n",
       "      <td>1581</td>\n",
       "      <td>https://www.trulia.com/c/ny/bronx/noonan-tower...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>939 Woodycrest Ave Bronx, NY 10452</td>\n",
       "      <td>Bronx</td>\n",
       "      <td>10452</td>\n",
       "      <td>1904</td>\n",
       "      <td>https://www.trulia.com/c/ny/bronx/noonan-tower...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4298</th>\n",
       "      <td>12-07 Jackson Ave  #2F Long Island City, NY 11101</td>\n",
       "      <td>Queens</td>\n",
       "      <td>11101</td>\n",
       "      <td>2200</td>\n",
       "      <td>https://www.trulia.com/p/ny/long-island-city/1...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4299</th>\n",
       "      <td>11123 76th Rd   #D8 Forest Hills, NY 11375</td>\n",
       "      <td>Queens</td>\n",
       "      <td>11375</td>\n",
       "      <td>1925</td>\n",
       "      <td>https://www.trulia.com/p/ny/forest-hills/11123...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4300</th>\n",
       "      <td>3069 34th St   #3A Astoria, NY 11103</td>\n",
       "      <td>Queens</td>\n",
       "      <td>11103</td>\n",
       "      <td>2299</td>\n",
       "      <td>https://www.trulia.com/p/ny/astoria/3069-34th-...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4301</th>\n",
       "      <td>125 W  31st St   #48F New York, NY 10001</td>\n",
       "      <td>New York</td>\n",
       "      <td>10001</td>\n",
       "      <td>4454</td>\n",
       "      <td>https://www.trulia.com/p/ny/new-york/125-w-31s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4302</th>\n",
       "      <td>80-34 164th St   #2 Jamaica, NY 11432</td>\n",
       "      <td>Queens</td>\n",
       "      <td>11432</td>\n",
       "      <td>3200</td>\n",
       "      <td>https://www.trulia.com/p/ny/jamaica/80-34-164t...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4303 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                Address    County    Zip  \\\n",
       "0                   2600 Netherland Ave Bronx, NY 10463     Bronx  10463   \n",
       "1                   2600 Netherland Ave Bronx, NY 10463     Bronx  10463   \n",
       "2                   2600 Netherland Ave Bronx, NY 10463     Bronx  10463   \n",
       "3                    939 Woodycrest Ave Bronx, NY 10452     Bronx  10452   \n",
       "4                    939 Woodycrest Ave Bronx, NY 10452     Bronx  10452   \n",
       "...                                                 ...       ...    ...   \n",
       "4298  12-07 Jackson Ave  #2F Long Island City, NY 11101    Queens  11101   \n",
       "4299         11123 76th Rd   #D8 Forest Hills, NY 11375    Queens  11375   \n",
       "4300               3069 34th St   #3A Astoria, NY 11103    Queens  11103   \n",
       "4301           125 W  31st St   #48F New York, NY 10001  New York  10001   \n",
       "4302              80-34 164th St   #2 Jamaica, NY 11432    Queens  11432   \n",
       "\n",
       "      price                                        Listing Url  \n",
       "0      2245  https://www.trulia.com/c/ny/bronx/the-century-...  \n",
       "1      2600  https://www.trulia.com/c/ny/bronx/the-century-...  \n",
       "2      3675  https://www.trulia.com/c/ny/bronx/the-century-...  \n",
       "3      1581  https://www.trulia.com/c/ny/bronx/noonan-tower...  \n",
       "4      1904  https://www.trulia.com/c/ny/bronx/noonan-tower...  \n",
       "...     ...                                                ...  \n",
       "4298   2200  https://www.trulia.com/p/ny/long-island-city/1...  \n",
       "4299   1925  https://www.trulia.com/p/ny/forest-hills/11123...  \n",
       "4300   2299  https://www.trulia.com/p/ny/astoria/3069-34th-...  \n",
       "4301   4454  https://www.trulia.com/p/ny/new-york/125-w-31s...  \n",
       "4302   3200  https://www.trulia.com/p/ny/jamaica/80-34-164t...  \n",
       "\n",
       "[4303 rows x 5 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trulia = pd.read_csv(\"../data/clean/trulia.csv\")\n",
    "trulia = trulia.rename(columns={\"County\": \"borough\", \"Address\": \"address\", \"Zip\":\"zip\",\n",
    "                                \"Listing Url\": \"listing_url\"})\n",
    "\n",
    "\n",
    "trulia"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "34e7c416",
   "metadata": {},
   "outputs": [],
   "source": [
    "#zillow home\n",
    "#zhome_value[\"month\"] = (zhome_value[\"date\"].dt.to_period(\"M\"))\n",
    "zhome_value[\"month\"] = (zhome_value[\"date\"].dt.to_period(\"M\"))\n",
    "monthly1 = (zhome_value[\"date\"].dt.to_period(\"M\"))\n",
    "monthly_home_value = zhome_value.groupby(monthly1)[\"home_value\"].mean().to_frame()\n",
    "monthly_home_value = monthly_home_value.reset_index()\n",
    "\n",
    "#zillow rent\n",
    "monthly2 = (zrental[\"date\"].dt.to_period(\"M\"))\n",
    "monthly_rent = zrental.groupby(monthly2)[\"mean_rent\"].mean().to_frame()\n",
    "monthly_rent = monthly_rent.reset_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "7b75fddd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>home_value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2002-01</td>\n",
       "      <td>370712.611111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2002-02</td>\n",
       "      <td>373894.435583</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2002-03</td>\n",
       "      <td>376616.515337</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2002-04</td>\n",
       "      <td>378112.061350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2002-05</td>\n",
       "      <td>397186.395522</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>2022-06</td>\n",
       "      <td>925910.073446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>2022-07</td>\n",
       "      <td>930027.016949</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>247</th>\n",
       "      <td>2022-08</td>\n",
       "      <td>933617.621469</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>2022-09</td>\n",
       "      <td>935784.056497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>937931.220339</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>250 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        date     home_value\n",
       "0    2002-01  370712.611111\n",
       "1    2002-02  373894.435583\n",
       "2    2002-03  376616.515337\n",
       "3    2002-04  378112.061350\n",
       "4    2002-05  397186.395522\n",
       "..       ...            ...\n",
       "245  2022-06  925910.073446\n",
       "246  2022-07  930027.016949\n",
       "247  2022-08  933617.621469\n",
       "248  2022-09  935784.056497\n",
       "249  2022-10  937931.220339\n",
       "\n",
       "[250 rows x 2 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthly_home_value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ef558c3d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>home_value</th>\n",
       "      <th>mean_rent</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2015-03</td>\n",
       "      <td>742939.034091</td>\n",
       "      <td>2552.507677</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2015-04</td>\n",
       "      <td>748273.159091</td>\n",
       "      <td>2560.086916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2015-05</td>\n",
       "      <td>752131.914773</td>\n",
       "      <td>2573.801855</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2015-06</td>\n",
       "      <td>759171.727273</td>\n",
       "      <td>2576.271181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2015-07</td>\n",
       "      <td>763736.607955</td>\n",
       "      <td>2581.061952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>2022-06</td>\n",
       "      <td>925910.073446</td>\n",
       "      <td>2954.701559</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>2022-07</td>\n",
       "      <td>930027.016949</td>\n",
       "      <td>2986.123400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>2022-08</td>\n",
       "      <td>933617.621469</td>\n",
       "      <td>3009.743571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>2022-09</td>\n",
       "      <td>935784.056497</td>\n",
       "      <td>2997.052818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>937931.220339</td>\n",
       "      <td>2993.555629</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>92 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      month     home_value    mean_rent\n",
       "0   2015-03  742939.034091  2552.507677\n",
       "1   2015-04  748273.159091  2560.086916\n",
       "2   2015-05  752131.914773  2573.801855\n",
       "3   2015-06  759171.727273  2576.271181\n",
       "4   2015-07  763736.607955  2581.061952\n",
       "..      ...            ...          ...\n",
       "87  2022-06  925910.073446  2954.701559\n",
       "88  2022-07  930027.016949  2986.123400\n",
       "89  2022-08  933617.621469  3009.743571\n",
       "90  2022-09  935784.056497  2997.052818\n",
       "91  2022-10  937931.220339  2993.555629\n",
       "\n",
       "[92 rows x 3 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "monthly_df = pd.merge(monthly_home_value, monthly_rent, on = \"date\")\n",
    "monthly_df = monthly_df.rename(columns={\"date\": \"month\"})\n",
    "monthly_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "103daf64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>borough</th>\n",
       "      <th>zip_code</th>\n",
       "      <th>state</th>\n",
       "      <th>city</th>\n",
       "      <th>date</th>\n",
       "      <th>home_value</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2002-01</td>\n",
       "      <td>BRONX</td>\n",
       "      <td>10475</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>458702.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2002-01</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>11249</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>478585.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2002-01</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>10280</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>1528468.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2002-01</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>11694</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>680213.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2002-01</td>\n",
       "      <td>STATEN_ISLAND</td>\n",
       "      <td>10314</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2002-01-31</td>\n",
       "      <td>338034.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1245</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>BRONX</td>\n",
       "      <td>10475</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>763961.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1246</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>11249</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>1571614.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1247</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>MANHATTAN</td>\n",
       "      <td>10282</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>3491526.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1248</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>11694</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>1123137.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1249</th>\n",
       "      <td>2022-10</td>\n",
       "      <td>STATEN_ISLAND</td>\n",
       "      <td>10314</td>\n",
       "      <td>NY</td>\n",
       "      <td>New York</td>\n",
       "      <td>2022-10-31</td>\n",
       "      <td>780462.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1250 rows Ã— 7 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        month        borough  zip_code state      city       date  home_value\n",
       "0     2002-01          BRONX     10475    NY  New York 2002-01-31    458702.0\n",
       "1     2002-01       BROOKLYN     11249    NY  New York 2002-01-31    478585.0\n",
       "2     2002-01      MANHATTAN     10280    NY  New York 2002-01-31   1528468.0\n",
       "3     2002-01         QUEENS     11694    NY  New York 2002-01-31    680213.0\n",
       "4     2002-01  STATEN_ISLAND     10314    NY  New York 2002-01-31    338034.0\n",
       "...       ...            ...       ...   ...       ...        ...         ...\n",
       "1245  2022-10          BRONX     10475    NY  New York 2022-10-31    763961.0\n",
       "1246  2022-10       BROOKLYN     11249    NY  New York 2022-10-31   1571614.0\n",
       "1247  2022-10      MANHATTAN     10282    NY  New York 2022-10-31   3491526.0\n",
       "1248  2022-10         QUEENS     11694    NY  New York 2022-10-31   1123137.0\n",
       "1249  2022-10  STATEN_ISLAND     10314    NY  New York 2022-10-31    780462.0\n",
       "\n",
       "[1250 rows x 7 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_boro = zhome_value.groupby([\"month\",\"borough\"]).max()\n",
    "\n",
    "df_boro.reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c331ed7c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "df_boro[\"home_value\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "0d2d500e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Home Values before and after AirBnb')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_before = df_boro[df_boro[\"date\"] < \"2007\"] \n",
    "df_after = df_boro[df_boro[\"date\"] >= \"2007\"]\n",
    "\n",
    "plt.plot(df_before[\"date\"], df_before[\"home_value\"], label=\"Before AirBnb\")\n",
    "plt.plot(df_after[\"date\"], df_after[\"home_value\"], label=\"After AirBnb\")\n",
    "\n",
    "plt.legend()\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Median Home Value in millions')\n",
    "plt.title(\"Home Values before and after AirBnb\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "d8099e30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data = pd.DataFrame(zhome_value).reset_index(), x = \"borough\", y = \"home_value\")\n",
    "plt.title(\"Median Home Value by Boro\")\n",
    "plt.xlabel(\"Borough\")\n",
    "plt.ylabel(\"Home Value in millions\")\n",
    "plt.xticks(rotation=45)\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5775b1c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data = pd.DataFrame(zrental).reset_index(), x = \"borough\", y = \"mean_rent\",palette='RdYlGn')\n",
    "plt.title(\"Mean Rent Price by Boro\")\n",
    "plt.xlabel(\"borough\")\n",
    "plt.ylabel(\"Rental Price in thousands\")\n",
    "plt.xticks(rotation=45)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3c0062b5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Yearly Mean Home Values')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "monthly_mean_home_value = zhome_value.groupby(monthly1)[\"home_value\"].mean().to_frame()\n",
    "monthly_mean_home_value.plot.line()\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Mean Home Value in thousands')\n",
    "plt.title('Yearly Mean Home Values')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "903781a9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Home Values in millions')"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.regplot(x=monthly_df[\"mean_rent\"], y=monthly_df[\"home_value\"], data=monthly_df, scatter_kws={\"color\": \"blue\"}, line_kws={\"color\" : \"green\"})\n",
    "\n",
    "plt.title(\"Mean Rent Price Vs Home Values\")\n",
    "plt.xlabel(\"Mean Rent in thousands\")\n",
    "plt.ylabel(\"Home Values in millions\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e00b559c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "zhome_value = zhome_value[\"home_value\"]\n",
    "zrental = zrental[\"mean_rent\"]\n",
    "\n",
    "# Create a box plot of the 'total_bill' and 'fare' columns\n",
    "sns.boxplot(data=[zhome_value, zrental])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
